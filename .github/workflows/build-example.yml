name: Build example

on:
  push:
    branches: [main]
    paths:
      - '**'

jobs:
  build-example:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 16384
          swap-size-mb: 16384
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          build-mount-path: '/nix'
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-example-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-example-${{ runner.os }}-
          gc-max-store-size-linux: 5G
          purge: true
          purge-prefixes: nix-example-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never

      - name: Configure Cachix
        uses: cachix/cachix-action@v14
        with:
          name: loongarch64-cross-test
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build example
        run: |
          nix build .#nixosConfigurations.loongarch64_99pi_tf_custom.config.system.build.toplevel | cachix push loongarch64-cross-test
